# -------------------------------------------
# ‚≠ê Importar librer√≠as necesarias
# -------------------------------------------
from sqlalchemy import create_engine            # Manejo de conexiones con SQLAlchemy
from urllib.parse import quote_plus             # Codifica contrase√±as con caracteres especiales
from dotenv import load_dotenv                  # Carga variables de entorno desde .env
import pandas as pd                             # Manipulaci√≥n de datos
import os                                       # Acceso a variables de sistema
import sys                                      # Salida controlada en caso de error

# -------------------------------------------
# ‚≠ê 1Ô∏è‚É£ Cargar variables del archivo .env
# -------------------------------------------
load_dotenv()

# Leer variables de conexi√≥n
usuario         = os.getenv('DB_USER')
contrase√±a_raw  = os.getenv('DB_PASSWORD')
host            = os.getenv('DB_HOST')
puerto          = os.getenv('DB_PORT')
base_de_datos   = os.getenv('DB_DATABASE')
export_path     = os.getenv('EXPORT_PATH')

# -------------------------------------------
# ‚≠ê 2Ô∏è‚É£ Validar que todas las variables existan
# -------------------------------------------
variables = [usuario, contrase√±a_raw, host, puerto, base_de_datos, export_path]
nombres   = ['DB_USER', 'DB_PASSWORD', 'DB_HOST', 'DB_PORT', 'DB_DATABASE', 'EXPORT_PATH']

for nombre, valor in zip(nombres, variables):
    if valor is None:
        print(f"‚ùå ERROR: Falta la variable {nombre} en tu archivo .env")
        sys.exit(1)

# -------------------------------------------
# ‚≠ê 3Ô∏è‚É£ Preparar la cadena de conexi√≥n
# -------------------------------------------
# Codificar la contrase√±a para evitar errores por caracteres especiales
contrase√±a = quote_plus(contrase√±a_raw)
cadena_conexion = f'mysql+pymysql://{usuario}:{contrase√±a}@{host}:{puerto}/{base_de_datos}'

# Crear engine de SQLAlchemy
engine = create_engine(cadena_conexion)
print("‚úÖ Conexi√≥n a MySQL configurada correctamente.")

# -------------------------------------------
# ‚≠ê 4Ô∏è‚É£ Definir la consulta SQL
# -------------------------------------------
consulta_sql = """
SELECT
    c.Country AS country,
    SUM(od.Quantity * p.Price) AS total_sales
FROM customers c
JOIN orders o ON c.CustomerID = o.CustomerID
JOIN orderdetails od ON o.OrderID = od.OrderID
JOIN products p ON od.ProductID = p.ProductID
GROUP BY c.Country
ORDER BY total_sales DESC;
"""

# -------------------------------------------
# ‚≠ê 5Ô∏è‚É£ Ejecutar la consulta y cargar resultados en DataFrame
# -------------------------------------------
print("‚öôÔ∏è Ejecutando consulta...")
df = pd.read_sql(consulta_sql, engine)
print("‚úÖ Consulta ejecutada exitosamente.")

# Mostrar resultados en consola
print("üìã Resultado:")
print(df)

# -------------------------------------------
# ‚≠ê 6Ô∏è‚É£ Exportar resultados a archivo Excel
# -------------------------------------------
ruta_excel = os.path.join(export_path, "ventas_por_pais.xlsx")
df.to_excel(ruta_excel, index=False)
print(f"‚úÖ Archivo Excel generado en: {ruta_excel}")
